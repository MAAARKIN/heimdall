<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>br.com.conductor.heimdall</groupId>
		<artifactId>heimdall</artifactId>
		<version>3.0.0-ALPHA</version>
	</parent>
	<artifactId>gateway</artifactId>
	<name>gateway</name>
	<packaging>jar</packaging>

	<properties>
		<docker.baseImage>java:openjdk-8-jdk-alpine</docker.baseImage>
		<docker.imageName>getheimdall/heimdall-gateway</docker.imageName>
		<docker.serverId>docker-hub</docker.serverId>
		<docker.registryUrl>https://hub.docker.com/</docker.registryUrl>
	</properties>

	<dependencies>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.6</version>
		</dependency>
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
        </dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-validator</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.netflix.netflix-commons</groupId>
			<artifactId>netflix-commons-util</artifactId>
		</dependency>
		<dependency>
			<groupId>br.com.conductor.heimdall</groupId>
			<artifactId>core</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>net.jodah</groupId>
			<artifactId>failsafe</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>2.6.1</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>gateway</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
			        <execution>
			            <id>build-info</id>
			            <goals>
			                <goal>build-info</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.1</version>
				<configuration>
					<baseImage>${docker.baseImage}</baseImage>
					<imageName>${docker.imageName}</imageName>
					<entryPoint>["java", "-Xmx4g", "-Xms1g", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<forceTags>true</forceTags>
					<serverId>${docker.serverId}</serverId>
					<registryUrl>${docker.registryUrl}</registryUrl>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<arguments>
								<argument>--spring.profiles.active=dev</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<description>In this project we built our algorithm over the Netflix Zuul. We pushed some steroids on the Zuul Filters, added some criterias to make the routes matching more rigid (like the HTTP Verb on the match).</description>
</project>